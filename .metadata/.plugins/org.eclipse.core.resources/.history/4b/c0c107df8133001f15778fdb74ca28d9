<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <!-- SQL문들은 <mapper>와 </mapper> 사이에 해당 문장 유형의 요소를 사용하여 정의함 -->
<!-- mapper 시작태그의 namespace 속성에는 매퍼 인터페이스의 패키지이름이 포함된 전체이름을 설정함 -->
<!-- mapper 시작태그의 namespace 속성에는 DAO 클래스인 경우에는 매퍼파일의 이름을 설정함 -->
  
<mapper namespace="com.spring5legacy.mypro00.mapper.MyBoardMapper">
<!-- 각 문장 유형 요소의 id 속성의 값은, 해당 문장을 호출하는 메퍼-인터페이스의 메소드 이름과 동일해야 함 -->


      <!-- 원하는 데이터를 조회하는 select문 작성 :반드시 SQL*Developer에서 
           원하는 결과를 반환하는지 확인된 SELECT문을 복사해서 붙여넣기 -->
      <!-- 문제: 게시물 전체 목록정보를 bno 기준 내림차순으로 정렬된 결과를 표시하는 SELECT문을 작성하시오 -->
      
      
         <!-- 게시물 등록
         <insert id="insertMyBoard" parameterType="com.spring5legacy.mypro00.domain.MyBoardVO">
            INSERT INTO myuser.tbl_myboard 
                  VALUES (myuser.seq_myboard.nextval ,
                                #{btitle}||myuser.seq_myboard.currval,
                                #{bcontent}||myuser.seq_myboard.currval,
                                'user'||myuser.seq_myboard.currval,
                                DEFAULT,DEFAULT,DEFAULT,DEFAULT,DEFAULT);
         </insert> -->
         
         
         <!-- 게시물 조회 - 목록 --><!-- 
         <select id="selectMyBoardList" resultType="com.spring5legacy.mypro00.domain.MyBoardVO">
         <![CDATA[
            SELECT bno, btitle, bwriter, bregdate, bmodDate, bviewsCnt, breplyCnt, bdelFlag
			FROM ( SELECT /*+ INDEX_DESC (a pk_myboard) */ ROWNUM rn, a.*
			        FROM  myuser.tbl_myboard a
			        WHERE ROWNUM <= (#{pageNum} * #{rowAmountPerPage})
			      )
			WHERE rn >= ((#{pageNum} * #{rowAmountPerPage}) - (#{rowAmountPerPage} - 1))
		 ]]>
         </select> -->
         
   <select id="selectMyBoardList" resultType="com.spring5legacy.mypro00.domain.MyBoardVO">
       <![CDATA[
            SELECT bno, btitle, bwriter, bregDate, bmodDate, bviewsCnt, breplyCnt, bdelFlag
			FROM ( SELECT /*+ INDEX_DESC (a pk_myboard) */ ROWNUM rn, a.*
			       FROM  myuser.tbl_myboard a
			       WHERE 
	   ]]>   
	   		<choose>
		         <when test='scope == "T".toString()'>
		            btitle LIKE '%' || #{keyword} || '%' AND
		         </when>
		         <when test='scope == "C".toString()'>
		            bcontent LIKE '%' || #{keyword} || '%' AND
		         </when>
		         <when test='scope == "W".toString()'>
		            bwriter LIKE '%' || #{keyword} || '%' AND
		         </when>
		         <when test="scope == 'TC'.toString()">
		            (btitle LIKE '%' || #{keyword} || '%' OR bcontent LIKE '%' || #{keyword} || '%') AND
		         </when>
            </choose>
		         <!-- <if test="(startDate != null and !startDate.equals('')) and 
		         			(endDate != null and !endDate.equals('')) " >
            		(bregDate BETWEEN #{startDate} AND #{endDate}) AND
		         </if> -->
		         <if test="(startDate != null and !startDate.equals('')) and 
		         			(endDate != null and !endDate.equals('')) " >
					<![CDATA[		         
            		(bmodDate >= TO_DATE(#{startDate}, 'YYYY-MM-DD') AND 
            		 bmodDate < (TO_DATE(#{endDate}, 'YYYY-MM-DD') + 1)) AND
            		]]>
		         </if>	 	
	   <![CDATA[
	   		ROWNUM <= (#{pageNum} * #{rowAmountPerPage})
			      )
			WHERE rn >= ((#{pageNum} * #{rowAmountPerPage}) - (#{rowAmountPerPage} - 1))
	   ]]>
        
   </select>
         
<!-- 
SELECT *
FROM myuser.tbl_myboard
WHERE btitle LIKE '%1%' ; 

SELECT *
FROM myuser.tbl_myboard
WHERE bcontent LIKE '%1%' ; 

SELECT *
FROM myuser.tbl_myboard
WHERE bwriter LIKE '%1%' ; 

SELECT *
FROM myuser.tbl_myboard
WHERE btitle LIKE '%1%'  OR bcontent LIKE '%1%'; 
-->
         
         
         <!-- 게시물 총수  -->
         <select id="selectRowTotal" resultType="Long">
         	SELECT count(*) FROM myuser.tbl_myboard
         	<where>
         		<choose>
		         <when test='scope == "T".toString()'>
		            btitle LIKE '%' || #{keyword} || '%'
		         </when>
		         <when test='scope == "C".toString()'>
		            bcontent LIKE '%' || #{keyword} || '%'
		         </when>
		         <when test='scope == "W".toString()'>
		            bwriter LIKE '%' || #{keyword} || '%'
		         </when>
		         <when test="scope == 'TC'.toString()">
		            (btitle LIKE '%' || #{keyword} || '%' OR bcontent LIKE '%' || #{keyword} || '%') 
		         </when>
          		</choose>
          			<!-- <if test="startDate != null and endDate != null " >
		           <if test="!startDate.equals('') and !endDate.equals('')">
            		 AND (bregDate BETWEEN #{startDate} AND #{endDate})
		           </if>
       			 </if> -->
       			    <if test="(startDate != null and !startDate.equals('')) and 
		         			(endDate != null and !endDate.equals('')) " >
					<![CDATA[		         
            		AND (bmodDate >= TO_DATE(#{startDate}, 'YYYY-MM-DD') AND 
            		 bmodDate < (TO_DATE(#{endDate}, 'YYYY-MM-DD') + 1))
            		]]>
		         </if>	 
         	</where>
         </select>

<!-- 위의 SELECT 동적구문은 아래처럼 작성 될 수도 있습니다.  -->
<select id="selectMyBoardList2" resultType="com.spring5legacy.mypro00.domain.MyBoardVO">
<![CDATA[
    SELECT bno, btitle, bcontent, bwriter, bregdate, bmodDate, bviewsCnt, breplyCnt, bdelFlag
    FROM ( SELECT /*+ INDEX_DESC (a pk_myboard) */ ROWNUM rn, a.*
            FROM  myuser.tbl_myboard a
            WHERE 
]]>
<trim prefix="(" suffix=") AND" prefixOverrides="OR">
    <foreach item='scope' collection="scopeArray">
        <trim prefix="OR">
            <choose>
                <when test="scope == 'T'.toString()">btitle LIKE '%'||#{keyword}||'%'</when>
                <when test="scope == 'C'.toString()">bcontent LIKE '%'||#{keyword}||'%'</when>
                <when test="scope == 'W'.toString()">bwriter LIKE '%'||#{keyword}||'%'</when>
            </choose>
        </trim>
    </foreach>
</trim>
<![CDATA[
            	       ROWNUM <= ( #{pageNum} * #{rowAmountPerPage} )
         )
    WHERE rn >= ( ( #{pageNum} * #{rowAmountPerPage} ) - ( #{rowAmountPerPage} - 1 ) )
]]>
</select>

  <!-- 게시물 총수  -->
         <select id="selectRowTotal2" resultType="Long">
         	SELECT count(*) FROM myuser.tbl_myboard
         	<where>
         		<trim prefix="(" suffix=") AND" prefixOverrides="OR">
    <foreach item='scope' collection="scopeArray">
        <trim prefix="OR">
            <choose>
                <when test="scope == 'T'.toString()">btitle LIKE '%'||#{keyword}||'%'</when>
                <when test="scope == 'C'.toString()">bcontent LIKE '%'||#{keyword}||'%'</when>
                <when test="scope == 'W'.toString()">bwriter LIKE '%'||#{keyword}||'%'</when>
            </choose>
        </trim>
    </foreach>
</trim>
         	</where>
         </select>


      
         <!-- 게시물 등록 - selectKey 이용함 -->
         <insert id="insertMyBoard">
            <selectKey keyProperty="bno" order="BEFORE" resultType="Long">
               SELECT myuser.seq_myboard.nextval FROM dual
            </selectKey>
            
            INSERT INTO myuser.tbl_myboard
            VALUES (#{bno},#{btitle},#{bcontent},#{bwriter},DEFAULT,DEFAULT,DEFAULT,DEFAULT,DEFAULT )
         </insert>   
      
      
         <!-- 게시물 등록 - selectKey 이용안함 -->
         <insert id="insertMyBoardNoKey">
            INSERT INTO myuser.tbl_myboard
            VALUES (seq_myboard.nextval,#{btitle},#{bcontent},#{bwriter},DEFAULT,DEFAULT,DEFAULT,DEFAULT,DEFAULT )
         </insert>
               
         <!-- 특정 게시물 조회(detail.jsp): OUTER JOIN 사용: 첨부파일이 없는 게시물도 결과에 포함되어야 함 -->   
         <!-- 첨부파일 정보 저장하기 위한 resultMap 정의 -->
         <resultMap type="com.spring5legacy.mypro00.domain.MyBoardAttachFileVO" id="attachFileMap">
         		<result property="uuid" column="uuid"/>
         		<result property="uploadPath" column="uploadPath"/>
         		<result property="fileName" column="fileName"/>
         		<result property="fileType" column="fileType"/>
         		<result property="fileDelFlag" column="fileDelFlag"/>
         </resultMap>
         <!-- 게시물 정보 저장하기 위한 resultMap 정의 -->
         <resultMap type="com.spring5legacy.mypro00.domain.MyBoardVO" id="myBoardMap">
         		<result property="bno" column="bno"/>
         		<result property="btitle" column="btitle"/>
         		<result property="bcontent" column="bcontent"/>
         		<result property="bwriter" column="bwriter"/>
         		<result property="bregDate" column="bregDate"/>
         		<result property="bmodDate" column="bmodDate"/>
         		<result property="bviewsCnt" column="bviewsCnt"/>
         		<result property="breplyCnt" column="breplyCnt"/>
         		<result property="bdelFlag" column="bdelFlag"/>
         		<collection property="attachFileList" resultMap="attachFileMap"/>
         </resultMap>
         
         <!-- 특정 게시물 조회 -->  <!-- resultType은 한 행이 들어가는 것. -->
         <select id="selectMyBoard" resultMap="myBoardMap">
                 SELECT a.bno, a.btitle, a.bcontent, a.bwriter, 
       a.bregDate, a.bmodDate, a.bviewsCnt, 
       (SELECT count(*) FROM myuser.tbl_myreply WHERE bno = a.bno) AS breplyCnt,
       a.bdelFlag,
       b.uuid, b.uploadPath, b.fileName, b.fileType, b.fileDelFlag
FROM myuser.tbl_myboard a 
LEFT OUTER JOIN myuser.tbl_myAttachFiles b ON (a.bno = b.bno) 
WHERE a.bno = #{bno}
         </select>
      
         <!-- 특정 게시물 수정 -->
         <update id="updateMyBoard">   
            UPDATE myuser.tbl_myboard
            SET btitle= #{btitle} , 
               bcontent=#{bcontent},
               bmodDate = DEFAULT
            WHERE bno=#{bno}
         </update>
      
      
         <!-- 특정 게시물 삭제 요청 - 해당글의 bdelFlag를 1로 수정 -->
         <update id="updateBdelFlag">
            UPDATE myuser.tbl_myboard 
            SET bdelFlag = 1 
            WHERE bno = #{bno}
         </update>
      
      
         <!-- 특정 게시물 삭제 - 실제 삭제 -->
         <delete id="deleteMyBoard">
            DELETE myuser.tbl_myboard
            WHERE bno=#{bno}
         </delete>
      
         <!-- 특정 게시물 조회수 증가 : 게시물 조회시 + 1 -->
         <update id="updateBviewsCnt">
            UPDATE myuser.tbl_myboard
            SET bviewsCnt = bviewsCnt + 1
            WHERE bno = #{bno}
         </update>
         
         <!-- 게시물 댓글 수 변경  -->
         <update id="updateBreplyCnt">
         	UPDATE  myuser.tbl_myboard
			SET breplyCnt = breplyCnt + #{amt}
			WHERE bno = #{bno}
         </update>
         
   
</mapper>