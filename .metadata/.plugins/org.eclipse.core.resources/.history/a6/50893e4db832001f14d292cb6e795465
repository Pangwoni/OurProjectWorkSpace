package com.spring5legacy.mypro00.common.security;

import java.io.IOException;
import java.util.Set;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.security.core.Authentication;
import org.springframework.security.core.authority.AuthorityUtils;
import org.springframework.security.web.WebAttributes;
import org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler;
import org.springframework.security.web.savedrequest.HttpSessionRequestCache;
import org.springframework.security.web.savedrequest.RequestCache;
import org.springframework.security.web.savedrequest.SavedRequest;

public class MyLoginAuthenticationSuccessHandler extends SavedRequestAwareAuthenticationSuccessHandler{
	
	@Override
	public void onAuthenticationSuccess(HttpServletRequest request, HttpServletResponse response,
			Authentication authentication) throws ServletException, IOException {
		
		HttpSession session = request.getSession(false);
			if (session != null) {
				session.removeAttribute(WebAttributes.AUTHENTICATION_EXCEPTION);
			}
		System.out.println("로그인 성공 -> 전달된 Authentication : " + authentication);
		
		// 권한이름을 set 객체에 저장
		Set<String> roleNames = AuthorityUtils.authorityListToSet(authentication.getAuthorities());
		System.out.println("Role Names : " + roleNames);
		
		RequestCache requestCache = new HttpSessionRequestCache();
		SavedRequest savedRequest = requestCache.getRequest(request, response);
			
		super.onAuthenticationSuccess(request, response, authentication);
		
        if(savedRequest == null) {
            if (roleNames.contains("ADMIN")) {
        	       response.sendRedirect("/mypro00/myboard/detail?bno=1");
            } else {
                response.sendRedirect("/mypro00/");
            }
        } else {
            super.onAuthenticationSuccess(request, response, authentication);
        }

	}
}
